// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PreInfoTrans.Data;

#nullable disable

namespace PreInfoTrans.Migrations
{
    [DbContext(typeof(EpiDbContext))]
    partial class EpiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PreInfoTrans.Models.Brands", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BrandCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandCode = "58",
                            BrandName = "BELAZ"
                        },
                        new
                        {
                            Id = 2,
                            BrandCode = "70",
                            BrandName = "BMW"
                        },
                        new
                        {
                            Id = 3,
                            BrandCode = "80",
                            BrandName = "BRIAB"
                        },
                        new
                        {
                            Id = 4,
                            BrandCode = "128",
                            BrandName = "CITROEN"
                        },
                        new
                        {
                            Id = 5,
                            BrandCode = "137",
                            BrandName = "DAF"
                        },
                        new
                        {
                            Id = 6,
                            BrandCode = "138",
                            BrandName = "DAIHATSU"
                        },
                        new
                        {
                            Id = 7,
                            BrandCode = "139",
                            BrandName = "DAIMLER"
                        },
                        new
                        {
                            Id = 8,
                            BrandCode = "178",
                            BrandName = "FIAT"
                        },
                        new
                        {
                            Id = 9,
                            BrandCode = "186",
                            BrandName = "FORD"
                        },
                        new
                        {
                            Id = 10,
                            BrandCode = "200",
                            BrandName = "GEELY"
                        },
                        new
                        {
                            Id = 11,
                            BrandCode = "201",
                            BrandName = "GENERAL MOTORS"
                        },
                        new
                        {
                            Id = 12,
                            BrandCode = "202",
                            BrandName = "GENERIC"
                        },
                        new
                        {
                            Id = 13,
                            BrandCode = "257",
                            BrandName = "HONDA"
                        },
                        new
                        {
                            Id = 14,
                            BrandCode = "272",
                            BrandName = "HYUNDAI"
                        },
                        new
                        {
                            Id = 15,
                            BrandCode = "274",
                            BrandName = "IKARBUS"
                        },
                        new
                        {
                            Id = 16,
                            BrandCode = "291",
                            BrandName = "IVECO"
                        },
                        new
                        {
                            Id = 17,
                            BrandCode = "298",
                            BrandName = "JEEP"
                        },
                        new
                        {
                            Id = 18,
                            BrandCode = "329",
                            BrandName = "KIA"
                        },
                        new
                        {
                            Id = 19,
                            BrandCode = "346",
                            BrandName = "LADA"
                        },
                        new
                        {
                            Id = 20,
                            BrandCode = "370",
                            BrandName = "LIFAN"
                        },
                        new
                        {
                            Id = 21,
                            BrandCode = "406",
                            BrandName = "MAZ"
                        },
                        new
                        {
                            Id = 22,
                            BrandCode = "407",
                            BrandName = "MAZDA"
                        },
                        new
                        {
                            Id = 23,
                            BrandCode = "455",
                            BrandName = "NISSAN"
                        },
                        new
                        {
                            Id = 24,
                            BrandCode = "483",
                            BrandName = "PEUGEOT"
                        });
                });

            modelBuilder.Entity("PreInfoTrans.Models.Carrier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EpiId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unp")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("Id");

                    b.ToTable("Carrier");
                });

            modelBuilder.Entity("PreInfoTrans.Models.Countries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryCode = "AM",
                            CountryName = "АРМЕНИЯ"
                        },
                        new
                        {
                            Id = 2,
                            CountryCode = "AT",
                            CountryName = "АВСТРИЯ"
                        },
                        new
                        {
                            Id = 3,
                            CountryCode = "AZ",
                            CountryName = "АЗЕРБАЙДЖАН"
                        },
                        new
                        {
                            Id = 4,
                            CountryCode = "BG",
                            CountryName = "БОЛГАРИЯ"
                        },
                        new
                        {
                            Id = 5,
                            CountryCode = "BY",
                            CountryName = "БЕЛАРУСЬ"
                        },
                        new
                        {
                            Id = 6,
                            CountryCode = "CH",
                            CountryName = "ШВЕЙЦАРИЯ"
                        },
                        new
                        {
                            Id = 7,
                            CountryCode = "CN",
                            CountryName = "КИТАЙ"
                        },
                        new
                        {
                            Id = 8,
                            CountryCode = "CZ",
                            CountryName = "ЧЕХИЯ"
                        },
                        new
                        {
                            Id = 9,
                            CountryCode = "DE",
                            CountryName = "ГЕРМАНИЯ"
                        },
                        new
                        {
                            Id = 10,
                            CountryCode = "EE",
                            CountryName = "ЭСТОНИЯ"
                        },
                        new
                        {
                            Id = 11,
                            CountryCode = "FR",
                            CountryName = "ФРАНЦИЯ"
                        },
                        new
                        {
                            Id = 12,
                            CountryCode = "GE",
                            CountryName = "ГРУЗИЯ"
                        },
                        new
                        {
                            Id = 13,
                            CountryCode = "HU",
                            CountryName = "ВЕНГРИЯ"
                        },
                        new
                        {
                            Id = 14,
                            CountryCode = "IT",
                            CountryName = "ИТАЛИЯ"
                        },
                        new
                        {
                            Id = 15,
                            CountryCode = "JP",
                            CountryName = "ЯПОНИЯ"
                        },
                        new
                        {
                            Id = 16,
                            CountryCode = "KG",
                            CountryName = "КЫРГЫЗСТАН"
                        },
                        new
                        {
                            Id = 17,
                            CountryCode = "KZ",
                            CountryName = "КАЗАХСТАН"
                        },
                        new
                        {
                            Id = 18,
                            CountryCode = "LT",
                            CountryName = "ЛИТВА"
                        },
                        new
                        {
                            Id = 19,
                            CountryCode = "LV",
                            CountryName = "ЛАТВИЯ"
                        },
                        new
                        {
                            Id = 20,
                            CountryCode = "MD",
                            CountryName = "МОЛДОВА, РЕСПУБЛИКА"
                        },
                        new
                        {
                            Id = 21,
                            CountryCode = "PL",
                            CountryName = "ПОЛЬША"
                        },
                        new
                        {
                            Id = 22,
                            CountryCode = "PT",
                            CountryName = "ПОРТУГАЛИЯ"
                        },
                        new
                        {
                            Id = 23,
                            CountryCode = "RU",
                            CountryName = "РОССИЯ"
                        },
                        new
                        {
                            Id = 24,
                            CountryCode = "TM",
                            CountryName = "ТУРКМЕНИСТАН"
                        },
                        new
                        {
                            Id = 25,
                            CountryCode = "TR",
                            CountryName = "ТУРЦИЯ"
                        },
                        new
                        {
                            Id = 26,
                            CountryCode = "UA",
                            CountryName = "УКРАИНА"
                        });
                });

            modelBuilder.Entity("PreInfoTrans.Models.Epi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CancelReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DirectionIn")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DocDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocName")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<int>("IsCrew")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGoods")
                        .HasColumnType("bit");

                    b.Property<int>("IsPassengers")
                        .HasColumnType("int");

                    b.Property<bool>("IsSupplies")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RegComleteDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegCompleteTDTS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RegDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RegEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegNumOutTDTS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegNumTDTS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Result")
                        .HasColumnType("int");

                    b.Property<string>("Route")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpareParts")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Targets")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TemporaryInDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TransportationType")
                        .HasColumnType("int");

                    b.Property<string>("TsmpFormatedString")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Epi");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DirectionIn = true,
                            DocDate = new DateTime(2024, 3, 15, 22, 5, 0, 0, DateTimeKind.Unspecified),
                            DocName = "0000001",
                            IsCrew = 0,
                            IsDeleted = false,
                            IsGoods = false,
                            IsPassengers = 0,
                            IsSupplies = false,
                            RegCompleteTDTS = "",
                            RegNumOutTDTS = "",
                            RegNumTDTS = "",
                            Result = 1,
                            Targets = 2,
                            TsmpFormatedString = "AM65432"
                        },
                        new
                        {
                            Id = 2,
                            DirectionIn = false,
                            DocDate = new DateTime(2024, 3, 15, 22, 6, 0, 0, DateTimeKind.Unspecified),
                            DocName = "0000002",
                            IsCrew = 0,
                            IsDeleted = false,
                            IsGoods = false,
                            IsPassengers = 0,
                            IsSupplies = false,
                            RegCompleteTDTS = "",
                            RegNumOutTDTS = "",
                            RegNumTDTS = "",
                            Result = 2,
                            Targets = 3,
                            TsmpFormatedString = "RT5432/RT543"
                        },
                        new
                        {
                            Id = 3,
                            DirectionIn = false,
                            DocDate = new DateTime(2024, 3, 15, 22, 7, 0, 0, DateTimeKind.Unspecified),
                            DocName = "0000003",
                            IsCrew = 0,
                            IsDeleted = false,
                            IsGoods = false,
                            IsPassengers = 0,
                            IsSupplies = false,
                            RegCompleteTDTS = "",
                            RegNumOutTDTS = "",
                            RegNumTDTS = "",
                            Result = 3,
                            Targets = 3,
                            TsmpFormatedString = "AM65432"
                        },
                        new
                        {
                            Id = 4,
                            DirectionIn = true,
                            DocDate = new DateTime(2024, 3, 15, 22, 8, 0, 0, DateTimeKind.Unspecified),
                            DocName = "0000004",
                            IsCrew = 0,
                            IsDeleted = false,
                            IsGoods = false,
                            IsPassengers = 0,
                            IsSupplies = false,
                            RegCompleteTDTS = "",
                            RegDateTime = new DateTime(2024, 3, 15, 22, 10, 0, 0, DateTimeKind.Unspecified),
                            RegNumOutTDTS = "",
                            RegNumTDTS = "11206604/150324/301234567",
                            Result = 5,
                            Targets = 0,
                            TsmpFormatedString = "AM65432/ВВ1232"
                        },
                        new
                        {
                            Id = 5,
                            DirectionIn = true,
                            DocDate = new DateTime(2024, 3, 15, 22, 9, 0, 0, DateTimeKind.Unspecified),
                            DocName = "0000005",
                            IsCrew = 0,
                            IsDeleted = false,
                            IsGoods = false,
                            IsPassengers = 0,
                            IsSupplies = false,
                            RegCompleteTDTS = "",
                            RegDateTime = new DateTime(2024, 3, 15, 22, 11, 0, 0, DateTimeKind.Unspecified),
                            RegNumOutTDTS = "",
                            RegNumTDTS = "",
                            Result = 6,
                            Targets = 0,
                            TsmpFormatedString = "ВВ5555"
                        },
                        new
                        {
                            Id = 6,
                            DirectionIn = false,
                            DocDate = new DateTime(2024, 3, 15, 22, 10, 0, 0, DateTimeKind.Unspecified),
                            DocName = "0000006",
                            IsCrew = 0,
                            IsDeleted = false,
                            IsGoods = false,
                            IsPassengers = 0,
                            IsSupplies = false,
                            RegCompleteTDTS = "",
                            RegNumOutTDTS = "",
                            RegNumTDTS = "",
                            Result = 4,
                            Targets = 1,
                            TsmpFormatedString = "ВЕ12345678"
                        },
                        new
                        {
                            Id = 7,
                            DirectionIn = false,
                            DocDate = new DateTime(2024, 3, 15, 22, 11, 0, 0, DateTimeKind.Unspecified),
                            DocName = "0000007",
                            IsCrew = 0,
                            IsDeleted = false,
                            IsGoods = false,
                            IsPassengers = 0,
                            IsSupplies = false,
                            RegComleteDateTime = new DateTime(2024, 3, 15, 22, 25, 0, 0, DateTimeKind.Unspecified),
                            RegCompleteTDTS = "",
                            RegDateTime = new DateTime(2024, 3, 15, 22, 20, 0, 0, DateTimeKind.Unspecified),
                            RegNumOutTDTS = "",
                            RegNumTDTS = "11206604/150324/307777777",
                            Result = 7,
                            Targets = 1,
                            TsmpFormatedString = "345МС00"
                        },
                        new
                        {
                            Id = 8,
                            DirectionIn = true,
                            DocDate = new DateTime(2024, 3, 15, 22, 13, 0, 0, DateTimeKind.Unspecified),
                            DocName = "0000008",
                            IsCrew = 0,
                            IsDeleted = false,
                            IsGoods = false,
                            IsPassengers = 0,
                            IsSupplies = false,
                            RegComleteDateTime = new DateTime(2024, 3, 15, 22, 41, 0, 0, DateTimeKind.Unspecified),
                            RegCompleteTDTS = "",
                            RegDateTime = new DateTime(2024, 3, 15, 22, 30, 0, 0, DateTimeKind.Unspecified),
                            RegNumOutTDTS = "",
                            RegNumTDTS = "11206604/150324/307788888",
                            Result = 9,
                            Targets = 0,
                            TsmpFormatedString = "345МС34"
                        },
                        new
                        {
                            Id = 9,
                            DirectionIn = true,
                            DocDate = new DateTime(2024, 3, 15, 22, 13, 0, 0, DateTimeKind.Unspecified),
                            DocName = "0000009",
                            IsCrew = 0,
                            IsDeleted = false,
                            IsGoods = false,
                            IsPassengers = 0,
                            IsSupplies = false,
                            RegComleteDateTime = new DateTime(2024, 3, 15, 22, 50, 0, 0, DateTimeKind.Unspecified),
                            RegCompleteTDTS = "",
                            RegDateTime = new DateTime(2024, 3, 15, 22, 31, 0, 0, DateTimeKind.Unspecified),
                            RegNumOutTDTS = "16412/31255555",
                            RegNumTDTS = "11206604/150324/306666666",
                            Result = 8,
                            Targets = 0,
                            TsmpFormatedString = "АА321321"
                        },
                        new
                        {
                            Id = 10,
                            DirectionIn = true,
                            DocDate = new DateTime(2024, 3, 15, 22, 14, 0, 0, DateTimeKind.Unspecified),
                            DocName = "0000010",
                            IsCrew = 0,
                            IsDeleted = false,
                            IsGoods = false,
                            IsPassengers = 0,
                            IsSupplies = false,
                            RegComleteDateTime = new DateTime(2024, 3, 15, 22, 23, 0, 0, DateTimeKind.Unspecified),
                            RegCompleteTDTS = "11206604/160323/301234567",
                            RegDateTime = new DateTime(2024, 3, 15, 22, 20, 0, 0, DateTimeKind.Unspecified),
                            RegEndDate = new DateTime(2024, 3, 16, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            RegNumOutTDTS = "16412/31234567",
                            RegNumTDTS = "11206604/150324/306549888",
                            Result = 8,
                            Targets = 0,
                            TsmpFormatedString = "АА32100/ММ65432"
                        });
                });

            modelBuilder.Entity("PreInfoTrans.Models.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateIssue")
                        .HasColumnType("datetime2");

                    b.Property<int>("EpiId")
                        .HasColumnType("int");

                    b.Property<string>("IdNumber")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passport")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Owner");
                });

            modelBuilder.Entity("PreInfoTrans.Models.Tsmp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EpiDocName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EpiId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegCountry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeCode")
                        .HasColumnType("int");

                    b.Property<string>("VinCode")
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)");

                    b.HasKey("Id");

                    b.HasIndex("EpiId");

                    b.ToTable("Tsmp");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "SCANIA",
                            EpiDocName = "0000001",
                            Model = "",
                            RegCountry = "",
                            RegNum = "AM65432",
                            Type = "",
                            TypeCode = 30,
                            VinCode = "1FTCR10A4PTA70496"
                        },
                        new
                        {
                            Id = 2,
                            Brand = "VOLVO",
                            EpiDocName = "0000002",
                            Model = "",
                            RegCountry = "",
                            RegNum = "RT5432",
                            Type = "",
                            TypeCode = 30,
                            VinCode = "1GCHK23U74F122056"
                        },
                        new
                        {
                            Id = 3,
                            Brand = "LADA",
                            EpiDocName = "0000002",
                            Model = "",
                            RegCountry = "",
                            RegNum = "RT543",
                            Type = "",
                            TypeCode = 30,
                            VinCode = "JHLRM3H73CC097070"
                        },
                        new
                        {
                            Id = 4,
                            Brand = "SCANIA",
                            EpiDocName = "0000003",
                            Model = "",
                            RegCountry = "",
                            RegNum = "AM65432",
                            Type = "",
                            TypeCode = 30,
                            VinCode = "1FTCR10A4PTA70496"
                        },
                        new
                        {
                            Id = 5,
                            Brand = "SCANIA",
                            EpiDocName = "0000004",
                            Model = "",
                            RegCountry = "",
                            RegNum = "AM65432",
                            Type = "",
                            TypeCode = 30,
                            VinCode = "1FTCR10A4PTA70496"
                        },
                        new
                        {
                            Id = 6,
                            Brand = "RENAULT",
                            EpiDocName = "0000004",
                            Model = "",
                            RegCountry = "",
                            RegNum = "ВВ1232",
                            Type = "",
                            TypeCode = 30,
                            VinCode = "1N4AL3AP7EN305245"
                        },
                        new
                        {
                            Id = 7,
                            Brand = "МАЗ",
                            EpiDocName = "0000005",
                            Model = "",
                            RegCountry = "",
                            RegNum = "ВВ5555",
                            Type = "",
                            TypeCode = 30,
                            VinCode = "2C4GP54L35R273796"
                        },
                        new
                        {
                            Id = 8,
                            Brand = "BELGEE",
                            EpiDocName = "0000006",
                            Model = "",
                            RegCountry = "",
                            RegNum = "ВЕ12345678",
                            Type = "",
                            TypeCode = 30,
                            VinCode = "2CNDL13F166195441"
                        },
                        new
                        {
                            Id = 9,
                            Brand = "DONGFENG",
                            EpiDocName = "0000007",
                            Model = "",
                            RegCountry = "",
                            RegNum = "345МС00",
                            Type = "",
                            TypeCode = 30,
                            VinCode = "2B3KA43G47H859864"
                        },
                        new
                        {
                            Id = 10,
                            Brand = "NISSAN",
                            EpiDocName = "0000008",
                            Model = "",
                            RegCountry = "",
                            RegNum = "345МС34",
                            Type = "",
                            TypeCode = 30,
                            VinCode = "2HSCESBR15C086125"
                        },
                        new
                        {
                            Id = 11,
                            Brand = "LADA",
                            EpiDocName = "0000009",
                            Model = "",
                            RegCountry = "",
                            RegNum = "АА321321",
                            Type = "",
                            TypeCode = 30,
                            VinCode = "1HGCR2F59FA048733"
                        },
                        new
                        {
                            Id = 12,
                            Brand = "LADA",
                            EpiDocName = "0000010",
                            Model = "",
                            RegCountry = "",
                            RegNum = "АА32100",
                            Type = "",
                            TypeCode = 30,
                            VinCode = "1J8HG58276C176514"
                        },
                        new
                        {
                            Id = 13,
                            Brand = "КАМАЗ",
                            EpiDocName = "0000010",
                            Model = "",
                            RegCountry = "",
                            RegNum = "ММ65432",
                            Type = "",
                            TypeCode = 30,
                            VinCode = "2C4RDGCG9FR690732"
                        });
                });

            modelBuilder.Entity("PreInfoTrans.Models.TsmpTypes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeCode")
                        .HasColumnType("int");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TsmpTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = 100,
                            Name = "водное судно",
                            TypeCode = 10,
                            TypeName = "морской/речной транспорт"
                        },
                        new
                        {
                            Id = 2,
                            Code = 203,
                            Name = "электропоезд",
                            TypeCode = 20,
                            TypeName = "железнодорожный транспорт"
                        },
                        new
                        {
                            Id = 3,
                            Code = 204,
                            Name = "тепловоз",
                            TypeCode = 20,
                            TypeName = "железнодорожный транспорт"
                        },
                        new
                        {
                            Id = 4,
                            Code = 210,
                            Name = "цистерна",
                            TypeCode = 20,
                            TypeName = "железнодорожный транспорт"
                        },
                        new
                        {
                            Id = 5,
                            Code = 212,
                            Name = "платформа",
                            TypeCode = 20,
                            TypeName = "железнодорожный транспорт"
                        },
                        new
                        {
                            Id = 6,
                            Code = 298,
                            Name = "прочий вагон",
                            TypeCode = 20,
                            TypeName = "железнодорожный транспорт"
                        },
                        new
                        {
                            Id = 7,
                            Code = 303,
                            Name = "грузовой автомобиль общего назначения",
                            TypeCode = 30,
                            TypeName = "автодорожный транспорт"
                        },
                        new
                        {
                            Id = 8,
                            Code = 306,
                            Name = "автомобиль-тягач",
                            TypeCode = 30,
                            TypeName = "автодорожный транспорт"
                        },
                        new
                        {
                            Id = 9,
                            Code = 307,
                            Name = "седельный тягач",
                            TypeCode = 30,
                            TypeName = "автодорожный транспорт"
                        },
                        new
                        {
                            Id = 10,
                            Code = 312,
                            Name = "грузовой прицеп общего назначения",
                            TypeCode = 30,
                            TypeName = "автодорожный транспорт"
                        },
                        new
                        {
                            Id = 11,
                            Code = 313,
                            Name = "специальный прицеп",
                            TypeCode = 30,
                            TypeName = "автодорожный транспорт"
                        },
                        new
                        {
                            Id = 12,
                            Code = 319,
                            Name = "грузовой полуприцеп общего назначения",
                            TypeCode = 30,
                            TypeName = "автодорожный транспорт"
                        },
                        new
                        {
                            Id = 13,
                            Code = 321,
                            Name = "автобус общего назначения",
                            TypeCode = 30,
                            TypeName = "автодорожный транспорт"
                        },
                        new
                        {
                            Id = 14,
                            Code = 322,
                            Name = "специальный автобус",
                            TypeCode = 30,
                            TypeName = "автодорожный транспорт"
                        },
                        new
                        {
                            Id = 15,
                            Code = 400,
                            Name = "воздушное судно",
                            TypeCode = 40,
                            TypeName = "воздушный транспорт"
                        },
                        new
                        {
                            Id = 16,
                            Code = 901,
                            Name = "контейнер",
                            TypeCode = 40,
                            TypeName = "воздушный транспорт"
                        });
                });

            modelBuilder.Entity("PreInfoTrans.Models.Tsmp", b =>
                {
                    b.HasOne("PreInfoTrans.Models.Epi", null)
                        .WithMany("Tsmps")
                        .HasForeignKey("EpiId");
                });

            modelBuilder.Entity("PreInfoTrans.Models.Epi", b =>
                {
                    b.Navigation("Tsmps");
                });
#pragma warning restore 612, 618
        }
    }
}
